package axis.module.modules.exploits;

import java.awt.Font;

import axis.Axis;
import axis.command.Command;
import axis.event.EventTarget;
import axis.event.events.DrawScreenEvent;
import axis.event.events.UpdateEvent;
import axis.management.managers.ModuleManager.Category;
import axis.module.Module;
import axis.module.modules.render.HUD;
import axis.util.FontUtils;
import axis.util.Logger;
import axis.value.Value;
import net.minecraft.client.gui.GuiNewChat;
import net.minecraft.client.gui.ScaledResolution;

public class AutoSetting extends Module {

	public static Value<String> setting = new Value("setting_type", "none");

	public AutoSetting() {
		super("AutoSetting", 9623002, Category.EXPLOITS);
		setEnabled(true);
		Axis.getCommandManager().getContents().add(new Command("setting", "<type>", new String[] { "set", "settin" }) {
			public void run(String message) {
				if (message.split(" ")[1].equalsIgnoreCase("type")) {
					if (message.split(" ")[2].equalsIgnoreCase("None")) {
						setting.setValue("None");
					} else if (message.split(" ")[2].equalsIgnoreCase("Anni")) {
						setting.setValue("Anni");
					} else if (message.split("")[2].equalsIgnoreCase("Hypixel")) {
						setting.setValue("Hypixel");
					}
					Logger.logChat("Setting type set to " + setting.getValue());
				}
			}
		});
	}

	public void onDisabled() {
		super.onDisabled();
		setting.setValue("None");
	}

	public void onUpdate(UpdateEvent event) {
		if (mc.getCurrentServerData().serverIP.contains("hypixel")) {
			setting.setValue("Hypixel");
		} else if (mc.getCurrentServerData().serverIP.contains("shotbow")) {
			setting.setValue("Anni");
		} else {
			setting.setValue("None");
		}
	}

	@EventTarget
	public void onDrawScreen(DrawScreenEvent event) {
		ScaledResolution scaledRes = new ScaledResolution(mc);
		float y1 = (float) (scaledRes.getScaledHeight() - 20);
		if (!Axis.getModuleManager().getModuleByName("GhoastHUD").isEnabled() && (HUD.currentMode.getValue().equals("Axis"))) {
			HUD.Comfortaa18.drawStringWithShadow("Type: \u00a7f" + setting.getValue(), scaledRes.getScaledWidth() - (setting.getValue().length() * 10) - 10, scaledRes.getScaledHeight() - 10, HUD.hexcolor);
		}
	}

}

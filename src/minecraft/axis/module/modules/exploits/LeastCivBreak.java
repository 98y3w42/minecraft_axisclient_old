package axis.module.modules.exploits;

import java.util.Iterator;

import org.lwjgl.opengl.EXTFramebufferObject;
import org.lwjgl.opengl.GL11;

import axis.Axis;
import axis.command.Command;
import axis.event.Event;
import axis.event.Event.State;
import axis.event.events.BlockBreakingEvent;
import axis.event.events.PacketSentEvent;
import axis.event.events.Render3DEvent;
import axis.event.events.UpdateEvent;
import axis.management.managers.ModuleManager;
import axis.management.managers.ModuleManager.Category;
import axis.module.Module;
import axis.module.modules.render.HUD;
import axis.util.BlockHelper;
import axis.util.Camera;
import axis.util.Logger;
import axis.util.RenderHelper;
import axis.util.RenderLatest;
import axis.util.RenderUtils;
import axis.util.Stencil;
import axis.util.TimeHelper;
import axis.value.Value;
import net.minecraft.block.BlockAir;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.client.renderer.RenderGlobal;
import net.minecraft.client.renderer.culling.Frustum;
import net.minecraft.client.renderer.entity.RenderManager;
import net.minecraft.client.shader.Framebuffer;
import net.minecraft.init.Blocks;
import net.minecraft.item.ItemBlock;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C07PacketPlayerDigging;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C0APacketAnimation;
import net.minecraft.potion.Potion;
import net.minecraft.potion.PotionEffect;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.tileentity.TileEntityBrewingStand;
import net.minecraft.tileentity.TileEntityChest;
import net.minecraft.tileentity.TileEntityDispenser;
import net.minecraft.tileentity.TileEntityDropper;
import net.minecraft.tileentity.TileEntityEnderChest;
import net.minecraft.tileentity.TileEntityFurnace;
import net.minecraft.tileentity.TileEntityHopper;
import net.minecraft.tileentity.TileEntityMobSpawner;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.MathHelper;

public class LeastCivBreak extends Module {

	private EnumFacing side;
	private TimeHelper time = new TimeHelper();
	private TimeHelper time2 = new TimeHelper();
	private C07PacketPlayerDigging packet;
	private BlockPos pos;
	private boolean sendClick = false;
	private boolean broke = false;

	public LeastCivBreak() {
		super("LeastCivBreak", -6165654, ModuleManager.Category.EXPLOITS);
		this.setDisplayName("Lesats CivBreak");
	}

	public void onBreakPacketSent(PacketSentEvent event) {
		if (event.getPacket() instanceof C07PacketPlayerDigging) {
			if (((C07PacketPlayerDigging) event.getPacket()).getStatus() == C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK) {
				this.packet = ((C07PacketPlayerDigging) event.getPacket());
			}
		}
	}

	public void onDisabled() {
		super.onDisabled();
	}

	public void onEnabled() {
		super.onEnabled();
		this.packet = null;
		this.broke = false;
	}

	public void onDigging(BlockBreakingEvent event) {
		if (event.getState() == BlockBreakingEvent.EnumBlock.CLICK && !this.sendClick) {
			this.pos = event.getPos();
			this.mc.thePlayer.sendQueue.addToSendQueue(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.START_DESTROY_BLOCK, this.pos, EnumFacing.UP));
		}
	}

	public void onUpdate(UpdateEvent event) {
		Double distance = (double) MathHelper.sqrt_double(mc.thePlayer.getDistanceSq(this.pos));
		if (distance > 6.7D) {
			if (packet != null) {
				this.packet = null;
				mc.thePlayer.sendQueue.addToSendQueue(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.RELEASE_USE_ITEM, new BlockPos(0, 0, 0), EnumFacing.UP));
			}
			return;
		}
		if ((event.state == Event.State.PRE) && (this.pos != null)) {
			mc.thePlayer.fakeSwingItem();
			float[] rotations = BlockHelper.getBlockRotations(this.pos.getX(), this.pos.getY(), this.pos.getZ());
			event.yaw = rotations[0];
			event.pitch = rotations[1];
		}
		if (event.state == Event.State.POST) {
			if (this.pos != null && packet != null && this.pos.toString().equals(packet.getPosition().toString())) {
				if ((time2.hasReached(65.0D))) {
					if (!this.broke) {
						this.mc.thePlayer.sendQueue.addToSendQueue(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK, this.pos, EnumFacing.UP));
						this.broke = true;
					}
					time2.reset();
					mc.thePlayer.sendQueue.addToSendQueue(new C0APacketAnimation());
					this.mc.thePlayer.sendQueue.addToSendQueue(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.START_DESTROY_BLOCK, this.pos, EnumFacing.UP));
					this.mc.thePlayer.sendQueue.addToSendQueue(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK, this.pos, EnumFacing.UP));
				}
			} else {
				this.packet = null;
			}

			if (packet == null && !(mc.theWorld.getBlockState(this.pos).getBlock() instanceof BlockAir)) {
				this.sendClick = true;
				float[] rotations = BlockHelper.getBlockRotations((double) this.pos.getX(), (double) this.pos.getY(), (double) this.pos.getZ());
				event.yaw = rotations[0];
				event.pitch = rotations[1];
				mc.playerController.onPlayerDamageBlock(this.pos, EnumFacing.UP);
				this.mc.thePlayer.sendQueue.addToSendQueue(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK, this.pos, EnumFacing.UP));
				mc.thePlayer.sendQueue.addToSendQueue(new C0APacketAnimation());
				this.sendClick = false;
				time.reset();
			}

			if (!(mc.thePlayer.getHeldItem().getItem() instanceof ItemBlock)
					&& mc.thePlayer.getHeldItem().getMaxItemUseDuration() == 0) {
				mc.thePlayer.sendQueue.addToSendQueue(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.RELEASE_USE_ITEM, new BlockPos(0, 0, 0), EnumFacing.UP));
			}
		}
	}

	public void onRender(Render3DEvent event) {
		checkSetupFBO();
		onRenderBlockOutline(event.getPartialTicks());
	}

	public void onRenderBlockOutline(float partialTicks) {
		if (pos != null) {
			GL11.glDisable(2896);
			GL11.glDisable(3553);
			GL11.glEnable(3042);
			GL11.glBlendFunc(770, 771);
			GL11.glDisable(2929);
			GL11.glEnable(2848);
			GL11.glDepthMask(false);
			GL11.glLineWidth(0.3F);
			Double distance = (double) MathHelper.sqrt_double(mc.thePlayer.getDistanceSq(this.pos));
			if (this.pos != null && distance > 6.7D) {
				GL11.glColor4f(1.0F, 0.2F, 0.0F, 0.25F);
			} else if (mc.theWorld.getBlockState(this.pos).getBlock() instanceof BlockAir) {
				GL11.glColor4f(1.0F, 0.7F, 0.0F, 0.25F);
			} else {
				GL11.glColor4f(0.2F, 0.9F, 0.0F, 0.25F);
			}
			double x = this.pos.getX() - mc.getRenderManager().viewerPosX;
			double y = this.pos.getY() - mc.getRenderManager().viewerPosY;
			double z = this.pos.getZ() - mc.getRenderManager().viewerPosZ;
			AxisAlignedBB box = new AxisAlignedBB(x, y, z, x + 1.0D, y + 1.0D, z + 1.0D);
			RenderUtils.drawFilledBox(box);
			if (this.pos != null && distance > 6.7D) {
				GL11.glColor4f(1.0F, 0.2F, 0.0F, 0.4F);
			} else if (mc.theWorld.getBlockState(this.pos).getBlock() instanceof BlockAir) {
				GL11.glColor4f(1.0F, 0.7F, 0.0F, 0.4F);
			} else {
				GL11.glColor4f(0.2F, 0.9F, 0.0F, 0.4F);
			}
			RenderGlobal.func_181561_a(box);
			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
			GL11.glDepthMask(true);
			GL11.glDisable(2848);
			GL11.glEnable(2929);
			GL11.glDisable(3042);
			GL11.glEnable(2896);
			GL11.glEnable(3553);
		}
	}

	public static void checkSetupFBO() {
		Framebuffer fbo = Minecraft.getMinecraft().getFramebuffer();
		if (fbo != null) {
			if (fbo.depthBuffer > -1) {
				setupFBO(fbo);
				fbo.depthBuffer = -1;
			}
		}
	}

	public static void setupFBO(Framebuffer fbo) {
		EXTFramebufferObject.glDeleteRenderbuffersEXT(fbo.depthBuffer);

		int stencil_depth_buffer_ID = EXTFramebufferObject.glGenRenderbuffersEXT();

		EXTFramebufferObject.glBindRenderbufferEXT(36161, stencil_depth_buffer_ID);

		EXTFramebufferObject.glRenderbufferStorageEXT(36161, 34041, Minecraft.getMinecraft().displayWidth,
				Minecraft.getMinecraft().displayHeight);

		EXTFramebufferObject.glFramebufferRenderbufferEXT(36160, 36128, 36161, stencil_depth_buffer_ID);

		EXTFramebufferObject.glFramebufferRenderbufferEXT(36160, 36096, 36161, stencil_depth_buffer_ID);
	}
}
